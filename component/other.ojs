<?
const wait = (msec) => new Promise((res, rej) => {
  setTimeout(() => res(''), msec);
});
?>
<h1>start other.ojs</h1>

<p>Wait test, async test, sequence test</p>
<p>Out of sequence test:</p>
<ul>
<?
// how not to do async printing
for (let x=0; x<10; x++) {
  wait(Math.random()*10).then(() => print('<li>' + x + '</li>'));
}
yield wait(100); //so we can reliably know all the waits have ended
?>
</ul>
<p>Waited...</p>
<p>In sequence:</p>
<ol>
<?
// how to do async printing
for (let x=0; x<10; x++) {
  yield wait(Math.random()*10).then(() => print('<li>' + x + '</li>'));
}
?>
</ol>

<p>Header sent <?=express.headerSent ?>

<?=require('last.ojs'); ?>

<h1>end other.ojs</h1>
